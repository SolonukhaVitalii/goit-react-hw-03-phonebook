{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","form","htmlFor","label","input","type","onChange","id","button","Component","Filter","ContactList","contacts","onDeleteContact","list","map","item","onClick","App","filter","addContact","cont","includes","alert","length","contact","prevState","changeFilter","deleteContact","contactId","console","log","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","normalizedFilter","toLowerCase","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1dcbf81b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3VDgR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1nHPv\",\"label\":\"ContactForm_label__1BLtZ\",\"input\":\"ContactForm_input__wJ8yR\",\"button\":\"ContactForm_button__3YHUN\"};","import React, { Component } from 'react';\r\nimport s from './ContactForm.module.css';\r\nimport shortid from 'shortid';\r\n\r\nclass ContactForm extends Component {\r\n    \r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    nameInputId = shortid.generate();\r\n    numberInputId = shortid.generate();\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({ [name]: value });\r\n    };\r\n    \r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.reset();\r\n    };\r\n    \r\n    reset = () => {\r\n        this.setState({ name: '', number: '' })\r\n    };\r\n    \r\n    \r\n    render() {\r\n        return (\r\n        <form onSubmit={this.handleSubmit} className={s.form}>\r\n        <label htmlFor={this.nameInputId} className={s.label}>\r\n            Name <input className={s.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              id={this.nameInputId}\r\n            /> \r\n        </label>\r\n        <label htmlFor={this.numberInputId}>\r\n            Number <input className={s.input}\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              id={this.numberInputId}\r\n            /> \r\n        </label>\r\n        <button type=\"submit\" className={s.button}>Add contact</button>\r\n        </form>\r\n        );\r\n     }\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport s from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <label htmlFor=\"\">Find contacts by name\r\n        <input className={s.input}\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={onChange}\r\n        />\r\n    </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Filter;","import React from 'react';\r\nimport s from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact}) => (\r\n    <ul className={s.list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n            <li key={id} className={s.item}>\r\n                <p className={s.name}>{name}:</p>\r\n                <p className={s.number}>{number}</p>\r\n                <button className={s.button} onClick={(() => onDeleteContact(id))}>Удалить</button>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactList;","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nclass App extends Component {\n \n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: ''\n  }\n  \n  addContact = ({ name, number }) => {\n    const searchSameName = this.state.contacts\n      .map((cont) => cont.name)\n      .includes(name);\n\n    if (searchSameName) {\n      alert(`${name} is already in contacts`);\n    } else if (name.length === 0) {\n      alert(\"Fields must be filled!\");\n    } else {\n      const contact = {\n        id: shortid.generate(),\n        name,\n        number\n      };\n      this.setState(prevState => ({\n        contacts: [contact, ...prevState.contacts],\n      }));\n    }\n  };\n  \n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  \n  deleteContact = (contactId) => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }))\n  };\n\n  componentDidMount() {\n    console.log('App');\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    \n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n  \n  componentDidUpdate(prevProps, prevState) {\n    console.log('App componentDidUpdate');\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('Новий конт')\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    const visibleContacts = this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n\n      return(\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm\n          onSubmit={this.addContact}\n        />\n\n        <h2>Contacts</h2>\n          <Filter\n            value={filter}\n            onChange={this.changeFilter}\n          />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact} />\n      </>\n    );\n  };\n};\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1KJ86\",\"item\":\"ContactList_item__1zdlo\",\"name\":\"ContactList_name__2AydL\",\"number\":\"ContactList_number__2bli2\",\"button\":\"ContactList_button__2u3aT\"};"],"sourceRoot":""}